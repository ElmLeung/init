# 第一题
---
apiVersion: v1
kind: Namespace
metadata:
  name: app-team1
  labels:
    kubernetes.io/metadata.name: app-team1
---
# 第二题
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: presentation
  name: presentation
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: presentation
  template:
    metadata:
      labels:
        app: presentation
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - tail -f /dev/null
        image: busybox
        imagePullPolicy: Always
        name: 
      restartPolicy: Always
---
#第三题
---
apiVersion: v1
kind: Namespace
metadata:
  name: my-app
  labels:
    kubernetes.io/metadata.name: my-app
---
apiVersion: v1
kind: Namespace
metadata:
  name: echo
  labels:
    kubernetes.io/metadata.name: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo
  name: echo
  namespace: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - tail -f /dev/null
        image: alpine/curl
        imagePullPolicy: Always
        name: curl
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
  name: my-app
  namespace: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - command:
        - sh
        - -c
        - sed -i "s/listen\(.*\)80;/listen 9000;/g" /etc/nginx/conf.d/default.conf
          && nginx -g "daemon off;"
        image: nginx
        imagePullPolicy: Always
        name: nginx
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-app
  name: my-app
  namespace: my-app
spec:
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: my-app
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-ingress
  namespace: my-app 
spec:
  podSelector: {}  
  policyTypes:
  - Ingress        
---
# 第四题
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  labels:
    app: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - name: nginx
        image: nginx
---
# 第五题
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx 
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"  
spec:
  controller: k8s.io/ingress-nginx 
---
apiVersion: v1
kind: Namespace
metadata:
  name: ing-internal
  labels:
    kubernetes.io/metadata.name: ing-internal
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ing-internal
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;

        location /hello {
            default_type text/plain;
            return 200 "easylearning.vip\n";
        }

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
  namespace: ing-internal
  labels:
    app: hello
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
      - name: nginx
        image: nginx
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello
  name: hello
  namespace: ing-internal
spec:
  ports:
  - port: 5678
    protocol: TCP
    targetPort: 80
  selector:
    app: hello
---

# 第十三题
---
apiVersion: v1
kind: Pod
metadata:
  name: log-generator
spec:
  containers:
  - name: busybox
    image: busybox:latest
    command: ["sh", "-c", "while true; do echo Sample log entry at $(date) >> /var/log/test.log; sleep 10; done"]

